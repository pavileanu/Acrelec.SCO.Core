using Acrelec.SCO.Core.Helpers;
using Acrelec.SCO.Core.Interfaces;
using Acrelec.SCO.Core.Managers;
using Acrelec.SCO.Core.Providers;
using Acrelec.SCO.DataStructures;
using System;
using System.Threading.Tasks;

namespace Acrelec.SCO.Core
{
    class Program
    {
        public static async Task Main(string[] args)
        {
            Console.WriteLine("SCO - Self Check Out System");

            //init
            try
            {
                IItemsProvider itemsProvider = new ItemsProvider("ContentItems.json");
                IOrderManager orderManager = new OrderManager(itemsProvider);

                //list POS items
                ListAllItems();

                //todo - check if server is available for order injection
                bool isAvailabale = await orderManager.IsOrderServiceOnlineAsync();

                if (!isAvailabale)
                    throw new Exception("Server is not available");

                //todo - create an order containing the following items:
                //1*Coke
                //2*Water
                var newOrder = new Order();
                newOrder.OrderItems.Add(new OrderedItem() { ItemCode = "100", Qty = 200 });
                newOrder.OrderItems.Add(new OrderedItem() { ItemCode = "200", Qty = 300 });

                var newCustomer = new Customer()
                {
                    Firstname = "Mircea",
                    Address = "Bucharest"
                };

                //inject the order to POS
                var assignedOrderNumber = await orderManager.InjectOrderAsync(newOrder, newCustomer);

                if (!string.IsNullOrEmpty(assignedOrderNumber) == true)
                    Console.WriteLine("Order injected with success");
                else
                    Console.WriteLine("Error injecting order");
            }
            catch(Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            Console.ReadLine();
        }

        /// <summary>
        /// list in Console all items (with all their properties)
        /// </summary>
        private static void ListAllItems()
        {
            //todo - list items and for each item a short code generated by the POSItemExtensions
            var itemProvider = new ItemsProvider("ContentItems.json");

            foreach (var posItem in itemProvider.AllPOSItems)
            {
                Console.WriteLine("Item: {0}", posItem.Abbreviation());
            }
        }
    }
}
